<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprProfHistQuieto</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnem</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables Iniciales

x = 1200;
y = choose(192,288,384,480,576,672);

/*
Velocidad del enemigo.
*/

vel = 1.5;

/*
Daño causado por el enemigo.
*/

dmg = 20;

/*
Salud o aguante del enemigo antes de morir.
*/

hlth = 200;
healthmax = 200;

/*
La variable "move" verifica si la instancia enemiga debe perseguir,
o no, horizontalmente al jugador.
*/

move = true;

/*
La variable "on" verifica si el jugador ya tuvo tiempo de escapar.
*/

on = true;

/*
La variable "delay" se encarga de que el tiempo de activación de la 
alarma 1 sea diferente para cada instancia enemiga.
*/

delay = (random_range(10,30));

/*
La variable "canshoot" regula el número de disparos que puede hacer
cada instancia enemiga. Esto es, sólo 1 disparo cada 4 segundos.
*/

canshoot = true;

/*
La variable "inmune" evita que la instancia enemiga reciba daño al
disparar su propia bala.
*/

inmune = false;

/*
La variable "canhit" regula el número de ataques cuerpo a cuerpo que 
puede hacer cada instancia enemiga. Esto es, sólo 1 golpe cada 5
segundos.
*/

canhit = true;



drop = choose(1,2);



dropquality = choose(1,2,3,4,5,6,7,8,9,10);



droptype = choose(1,2,3,4);



sprquieto = false;



sprmelee = false;



sprdistancia = false;



sprcorrer = false;



sprcorrerD = false;



sprcorrerI = false;



sprmuere = false;



canend = true;



theend = false;



doingmelee = false;



doingdistancia = false;



goal1 = true;



goal2 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control de Dropeo.

if (drop = 2){
switch (dropquality){
    case 1: switch (droptype){
                case 1: instance_create(x,y,objArmaTop); break;
                case 2: instance_create(x,y,objShieldTop); break;
                case 3: instance_create(x,y,objEnergiz); break;
                case 4: instance_create(x,y,objPapitas); break;
            }; break;
    case 2:
    case 3:
    case 4: switch (droptype){
                case 1: instance_create(x,y,objArmaMed); break;
                case 2: instance_create(x,y,objShieldMed); break;
                case 3: instance_create(x,y,objEnergiz); break;
                case 4: instance_create(x,y,objPapitas); break;
            }; break;
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:    switch (droptype){
                case 1: instance_create(x,y,objArmaBas); break;
                case 2: instance_create(x,y,objShieldBas); break;
                case 3: instance_create(x,y,objEnergiz); break;
                case 4: instance_create(x,y,objPapitas); break;
            }; break;
    }
}

show_debug_message(drop);
show_debug_message(dropquality);
show_debug_message(droptype);
show_debug_message("*****");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

goal1 = true;
goal2 = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Medidor de Sprite Muere

theend = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Finalización de Sprite Distancia

sprdistancia = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Finalización de Sprite Melee

sprmelee = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reactivación de Ataque Melee

canhit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Desactivación de Inmunidad

inmune = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reactivación de Balas

canshoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reactivación tras escapatoria.

/*
La alarma 1 se encarga de que cada instancia enemiga le dé al jugador
un tiempo de escapatoria diferente.
*/

on = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reactivación de Movimiento

/*
La alarma 0 hace que cada instancia enemiga le dé al jugador un tiempo
diferente para escapar verticalmente.
*/

goal1 = false;
goal2 = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objProfHist</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control de Movimiento

if (distance_to_point(1000,y) &gt; 24)&amp;&amp;(goal1){
    x = x - vel;
    image_xscale = -1
    sprcorrerD = true;
}
else{
while (alarm[0] = -1)&amp;&amp;(goal2 = false){
    alarm[0] = 60;
    }
sprcorrerD = false;
}

if (distance_to_point(1344,y) &gt; 24)&amp;&amp;(goal2){
    x = x + vel;
    image_xscale = 1
    sprcorrerI = true;
}
else{
while (alarm[8] = -1)&amp;&amp;(goal1 = false){
    alarm[8] = 60;
    }
sprcorrerI = false;
}


/*
El código siguiente hace que los enemigos no persigan inmediatamente
al jugador para que pueda escaparse. Cada instancia enemiga recibe la
orden de perseguir en un momento diferente.
*/

if (keyboard_check(vk_up))||
    (keyboard_check(vk_down)){
on = false;
alarm[1] = delay;
}


if (on){
    y = objPers.y;
    alarm[0] = 45 
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control de Daño

// Control de Disponibilidad

if (y = objPers.y)&amp;&amp;
    ((place_meeting(x+48,y,objPers))||
    (place_meeting(x-48,y,objPers))){
vulnerable = true;   
}
else{
vulnerable = false
}

// Daño recibido

/*
El código siguiente regula el daño recibido de los ataques cuerpo a cuerpo.
*/

if (global.atbas)&amp;&amp;
    (vulnerable){
hlth = hlth - (objPers.dmg + objPers.xtradmg);   
}

/*
El código siguiente regula el daño recibido de los ataques a distancia.
*/

if (place_meeting(x,y,objBalaPers)){
hlth = hlth - (objPers.dmg + objPers.xtradmg)
with(objBalaPers){
    instance_destroy()
    }
}

/*
El código siguiente hace que las instancias enemigas también sufran daño
al ser alcanzadas por una bala de otro enemigo.
*/

if (!inmune)&amp;&amp;((place_meeting(x,y,objBalaEnem))){
with(objBalaEnem){
    instance_destroy()
    }
hlth = hlth - (objPers.dmg + objPers.xtradmg)
}

if (!inmune)&amp;&amp;((place_meeting(x,y,objBalaEnemGood))){
with(objBalaEnemGood){
    instance_destroy()
    }
hlth = hlth - (objPers.dmg + objPers.xtradmg)
}

/*
El código siguiente hace que la instancia enemiga se destruya al quedarse
sin salud.
*/

if (hlth &lt;= 0){
if (canend){
    alarm[7] = 30;
    }
canend = false;
if (theend){
    instance_destroy()
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controles de Balas

/*
La variable "freeline" verifica si la instancia enemiga tiene libre la línea 
de disparo, es decir, sin otro enemigo en medio.
*/

freeline = collision_line(x,y,objPers.x,objPers.y,objEnem,false,true);

/*
El código siguiente se encarga de que cada instancia enemiga sólo pueda
disparar si se encuentra en el mismo carril (en "y") que el jugador.
*/

if (y = objPers.y){
inplace = true;
}
else{
inplace = false;
}

/*
El código siguiente se encarga de que cada instancia enemiga sólo pueda
disparar si se cumplen las condiciones previas.
*/

if (!vulnerable)&amp;&amp;(canshoot)&amp;&amp;(freeline = -4)&amp;&amp;(inplace)&amp;&amp;(image_xscale = -1){

/*
¡Ojo! La variable "vulnerable" verifica si la instancia enemiga está
lo suficientemente cerca del jugador.
*/

inmune = true;
alarm[3] = 45;
whichbullet = choose(1,2,3,4,5,6,7,8,9,10);
    if (whichbullet = 5){
    instance_create(x,y,objBalaHistGood)
    }
    else{
    instance_create(x,y,objBalaHistBad)
    }
canshoot = false;
alarm[2] = 120;
doingdistancia = true;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control de Melee

if (canhit)&amp;&amp;(inplace)&amp;&amp;(distance_to_point(objPers.x,y) &lt; 48){
objPers.hlth = objPers.hlth - dmg;
canhit = false;
alarm[4] = 150;
doingmelee = true;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cambios de Sprites

if (sprcorrerD)||(sprcorrerI){
sprite_index = sprProfHistCorrer;
sprcorrer = true;
}
else{
sprcorrer = false;
}

if ((!sprcorrer)&amp;&amp;(!sprmelee)&amp;&amp;(!sprdistancia)&amp;&amp;(!sprmuere)){
sprite_index = sprProfHistQuieto;
sprquieto = true
}
else{
sprquieto = false
}

if (doingmelee){
sprmelee = true;
alarm[5] = 25;
sprite_index = sprProfHistMelee;
doingmelee = false
}
else{
sprmelee = false
}

if (doingdistancia){
sprdistancia = true;
alarm[6] = 10;
sprite_index = sprProfHistDistancia;
doingdistancia = false
}
else{
sprdistancia = false
}

if (hlth &lt;= 0){
sprmuere = true;
sprite_index = sprProfHistMuere;
}
else{
sprmuere = false;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Creación de Sprite propio

draw_self();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Creación Barra de Vida

salud = (hlth/healthmax)*100;

draw_healthbar(x - 44,y - 75,x + 44,y - 55,salud,c_gray,c_red,c_green,0,true,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
